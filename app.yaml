runtime: custom
env: flex
service: binenand-peerjs-server

manual_scaling:
  instances: 1

network:
  session_affinity: true

resources:
  cpu: 10
  memory_gb: 64

liveness_check:
  path: "/binenand/peerjs/id"
  check_interval_sec: 60
  timeout_sec: 4
  failure_threshold: 2
  success_threshold: 2

# create new Google AppEngine project using command" line:
# gcloud init

# create new AppEngine service:
# gcloud app create
# choose region europe-west6-a
# do everything else necessary for administrative purposes during the execution of this command

# cd into current directory where the current file resides, deploy app to cloud:
# gcloud app deploy
# (on error of missing billing account: copy url in error message to browser and link billing account. Retry gcloud app deploy)
# local files are copied over to google app engine project, then Docker image is built using dockerfile, then service ist configured using app.yaml, then service is started using Dockerfile.

# go to https://console.cloud.google.com/appengine to see your service backend

# open app here: https://[projectname].appspot.com/binenand/peerjs/id --> You should see an id

# in peerjs client project: Update connection info of Peer to:
#  {
#        host: '[projectname].appspot.com', # or whatever url gcloud app deploy command told you
#        port: 443,
#        path:'/binenand',
#        secure: true
#  }

# ?

# profit!
